{"version":3,"file":"devfractal-router.cjs.development.js","sources":["../src/MatchContext.tsx","../src/RouterContext.tsx","../src/Router.tsx","../src/SafeRoute.tsx","../src/SimpleRedirect.tsx"],"sourcesContent":["import React from 'react'\nimport { match } from 'react-router'\nimport { Mixed, TypeOf } from 'technoidentity-utils'\nimport { cast, fatal } from 'technoidentity-utils'\n\n// tslint:disable-next-line: typedef\nexport const MatchContext = React.createContext<match | undefined>(undefined)\n\nexport function useMatch<Spec extends Mixed>(\n  paramsSpec: Spec,\n): match<TypeOf<Spec>> {\n  // tslint:disable-next-line: typedef\n  const match: match | undefined = React.useContext(MatchContext)\n\n  if (match === null || match === undefined) {\n    fatal('match is null or undefined')\n  } else {\n    cast(paramsSpec, match.params)\n  }\n\n  return match as match<TypeOf<Spec>>\n}\n\nexport function useParams<Spec extends Mixed>(paramsSpec: Spec): TypeOf<Spec> {\n  const { params } = useMatch(paramsSpec)\n  return params\n}\n","import { History, Location } from 'history'\nimport { parse } from 'query-string'\nimport React from 'react'\nimport { RouteChildrenProps } from 'react-router'\nimport { Mixed, TypeOf } from 'technoidentity-utils'\nimport { cast, verify } from 'technoidentity-utils'\n// tslint:disable typedef\n\ninterface RouterContext extends RouteChildrenProps {\n  setRouteMatched(value: boolean): void\n  getRouteMatched(): boolean\n}\n\nexport const RouterContext: React.Context<RouterContext> = React.createContext<\n  RouterContext\n>((undefined as unknown) as RouterContext)\n\nexport function useRouter(): RouterContext {\n  const result = React.useContext(RouterContext)\n  verify(result !== null)\n\n  return result\n}\n\nexport function useHistory(): History {\n  const { history } = useRouter()\n\n  return history\n}\n\nexport function useLocation(): Location {\n  const { location } = useRouter()\n\n  return location\n}\n\nexport function useQuery<Spec extends Mixed>(\n  querySpec: Spec,\n): TypeOf<typeof querySpec> {\n  const location = useLocation()\n  const query = parse(location.search)\n  cast(querySpec, query)\n\n  return query\n}","import React from 'react'\nimport {\n  BrowserRouter,\n  BrowserRouterProps,\n  HashRouter,\n  HashRouterProps,\n  Route,\n} from 'react-router-dom'\nimport { RouterContext, useRouter } from './RouterContext'\n\n// tslint:disable no-class readonly-keyword no-object-mutation no-this\nclass RouteMatched {\n  private routeMatched: boolean = false\n\n  setRouteMatched = (routeMatched: boolean) => {\n    this.routeMatched = routeMatched\n  }\n\n  getRouteMatched = () => this.routeMatched\n}\n// tslint:enable no-class readonly-keyword no-object-mutation no-this\n\nexport type RouterType = 'browser' | 'hash'\n\nexport type RouterProps<T extends RouterType> = (T extends 'browser'\n  ? BrowserRouterProps\n  : HashRouterProps) & {\n  readonly variant?: T\n  readonly children: React.ReactNode\n}\n\nconst CheckRouteMatched: React.FC = () => {\n  const { getRouteMatched } = useRouter()\n  if (!getRouteMatched()) {\n    throw new Error('no route matched')\n  }\n  // tslint:disable-next-line: no-null-keyword\n  return null\n}\n\nconst RouterChildren: React.FC = ({ children }) => (\n  <Route>\n    {routeProps => (\n      <RouterContext.Provider value={{ ...routeProps, ...new RouteMatched() }}>\n        {children}\n        <CheckRouteMatched />\n      </RouterContext.Provider>\n    )}\n  </Route>\n)\n\nexport function Router<T extends RouterType>({\n  variant,\n  children,\n  ...props\n}: RouterProps<T>): JSX.Element {\n  return variant === 'browser' ? (\n    <BrowserRouter {...props}>\n      <RouterChildren>{children}</RouterChildren>\n    </BrowserRouter>\n  ) : (\n    <HashRouter {...props}>\n      <RouterChildren>{children}</RouterChildren>\n    </HashRouter>\n  )\n}\n","import React from 'react'\nimport { Route as RRRoute, RouteProps } from 'react-router-dom'\nimport { MatchContext } from './MatchContext'\nimport { useRouter } from './RouterContext'\n\nexport function Route({\n  component: Component,\n  render,\n  children,\n  exact,\n  ...props\n}: RouteProps): JSX.Element {\n  const { setRouteMatched } = useRouter()\n\n  return (\n    <RRRoute\n      {...props}\n      exact={exact !== undefined ? exact : true}\n      render={renderProps => {\n        if (setRouteMatched) {\n          setRouteMatched(true)\n        }\n\n        return (\n          <MatchContext.Provider value={renderProps.match}>\n            {Component ? (\n              <Component {...renderProps} />\n            ) : render ? (\n              render(renderProps)\n            ) : (\n              children\n            )}\n          </MatchContext.Provider>\n        )\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { Redirect, Route, RouteComponentProps } from 'react-router-dom'\nimport { useRouter } from './RouterContext'\n\nexport interface SimpleRedirectProps {\n  readonly from: string\n  readonly to: string\n  readonly exact?: boolean\n}\n\nexport const SimpleRedirect: React.FC<SimpleRedirectProps> = ({\n  from,\n  to,\n  exact,\n}) => {\n  const { setRouteMatched } = useRouter()\n  return (\n    <Route\n      exact={exact !== undefined ? exact : true}\n      path={from}\n      render={() => {\n        if (setRouteMatched) {\n          setRouteMatched(true)\n        }\n        return <Redirect to={to} />\n      }}\n    />\n  )\n}\n\nexport type RouteComponentPropsRemoved<T> = Omit<T, keyof RouteComponentProps>\n\nexport function removeRouteComponentProps<T extends RouteComponentProps>(\n  props: T,\n): RouteComponentPropsRemoved<T> {\n  const { match, location, history, staticContext, ...result } = props\n  return result\n}\n"],"names":["MatchContext","React","createContext","undefined","useMatch","paramsSpec","match","useContext","fatal","cast","params","useParams","RouterContext","useRouter","result","verify","useHistory","history","useLocation","location","useQuery","querySpec","query","parse","search","RouteMatched","routeMatched","CheckRouteMatched","getRouteMatched","Error","RouterChildren","children","Route","routeProps","Provider","value","Router","variant","props","BrowserRouter","HashRouter","Component","component","render","exact","setRouteMatched","RRRoute","renderProps","SimpleRedirect","from","to","path","Redirect","removeRouteComponentProps","staticContext"],"mappings":"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"}